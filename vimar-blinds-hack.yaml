#==================
#=== Substitutions
#==================
substitutions:
  device_name: vimar-blinds-hack-controller
  friendly_name: ESPHome Vimar Blinds Hack Controller

esphome:
  name: ${device_name}
  platform: ESP8266
  board: nodemcuv2
  includes:
  - utility.h
  project:
    name: "Bigmoby.vimar-blinds-hack"
    version: "1.0.0"         

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: !secret wifi_static_ip
    gateway: 192.168.1.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails 
  ap:
    ssid: "Vimar Blinds Hack Hotspot"
    password: !secret ap_password

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_user
  password: !secret mqtt_password

# Enable logging
logger: 

sensor:
  #=== Uptime
  - platform: uptime
    name: ${friendly_name} Uptime

  #=== WiFi Signal
  - platform: wifi_signal
    name: ${friendly_name} WiFi Signal
    update_interval: 60s

  #=== Failsafe time
  - platform: homeassistant
    id: failsafe_time
    name: ${friendly_name} Hack Tapparelle Failsafe Time
    entity_id: input_number.hack_tapparelle_failsafe_time_in_seconds

globals:
  - id: scena_tapparella_in_uso
    type: int
    restore_value: no
    initial_value: '1'

#=== Switches
switch:
  #=== Relay chiudi
  - platform: gpio
    pin: 
      number: 12
      inverted: True
    name: Relay chiudi
    icon: "mdi:stop-circle-outline"
    id: relayOpen
    internal: true
    restore_mode : ALWAYS_OFF
    interlock: &interlock_group [relayOpen, relayClose, relaySelectPlus, relaySelectMinus, relayStop]
    on_turn_on:
    - delay: 400ms
    - switch.turn_off: relayOpen

  #=== Relay apri
  - platform: gpio
    pin: 
      number: 16
      inverted: True
    name: Relay apri
    icon: "mdi:play-circle-outline"
    id: relayClose
    internal: true
    restore_mode : ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
    - delay: 400ms
    - switch.turn_off: relayClose

  #=== Relay seleziona tapparella superiore
  - platform: gpio
    pin: 
      number: 2
      inverted: True
    name: Relay seleziona tapparella superiore
    icon: "mdi:stop-circle-outline"
    id: relaySelectPlus
    internal: true
    restore_mode : ALWAYS_OFF
    interlock: *interlock_group

  #=== Relay seleziona tapparella inferiore
  - platform: gpio
    pin: 
      number: 13
      inverted: True
    name: Relay seleziona tapparella inferiore
    icon: "mdi:play-circle-outline"
    id: relaySelectMinus
    internal: true
    restore_mode : ALWAYS_OFF  
    interlock: *interlock_group

  #=== Relay tapparella stop
  - platform: gpio
    pin: 
      number: 14
      inverted: True
    name: Relay tapparella stop
    icon: "mdi:play-circle-outline"
    id: relayStop
    internal: true
    restore_mode : ALWAYS_OFF
    interlock: *interlock_group
    on_turn_on:
    - delay: 400ms
    - switch.turn_off: relayStop 

  #=== Relay 6
  - platform: gpio
    pin: 
      number: 0
      inverted: True
    name: Relay 6
    id: relay6
    restore_mode : ALWAYS_OFF

  #=== Relay 7
  - platform: gpio
    pin: 
      number: 4
      inverted: True
    name: Relay 7
    id: relay7
    restore_mode : ALWAYS_OFF 

  #=== Relay 8
  - platform: gpio
    pin: 
      number: 5
      inverted: True
    name: Relay 8
    id: relay8
    restore_mode : ALWAYS_OFF                

select:
  - platform: template
    name: "Template select scene"
    id: tapparelle_select_scena_control
    optimistic: true
    options:
      - "1"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      - "8"
      - "9"
      - "10"
      - "11"
      - "12"
      - "13"
      - "14"
      - "15"
      - "0"
    initial_option: "1"
    set_action:
      - lambda: |-
          int int_value = atoi(x.c_str());
          if (int_value >= 0 && int_value <= 15) {
            set_selettore_tapparelle(id(scena_tapparella_in_uso), int_value);
            id(scena_tapparella_in_uso) = int_value;
            ESP_LOGE("main", "Set scena_tapparella_in_uso %d", id(scena_tapparella_in_uso));
          } else {
            reset_selettore_tapparelle();
            id(scena_tapparella_in_uso) = 0;
            id(tapparelle_select_scena_control).state = "0";
            ESP_LOGE("main", "Set scena_tapparella_in_uso DEFAULT value %d", id(scena_tapparella_in_uso));
          } 

cover:
  - platform: template
    name: "Tapparelle casa"
    id: tapparelle_template
    close_action:
      - switch.turn_off: relayClose
      - switch.turn_off: relayStop
      - switch.turn_on: relayOpen
      - delay: 0.3s
      - switch.turn_off: relayOpen
    open_action:
      - switch.turn_off: relayOpen
      - switch.turn_off: relayStop
      - switch.turn_on: relayClose
      - delay: 0.3s
      - switch.turn_off: relayClose
    stop_action:
      - switch.turn_off: relayOpen
      - switch.turn_off: relayClose
      - switch.turn_on: relayStop
      - delay: 0.3s
      - switch.turn_off: relayStop    
    on_open:
      - logger.log: "Le tapparelle sono Aperte!"
    on_closed:
      - logger.log: "Le tapparelle sono Chiuse!"  
    optimistic: true
    assumed_state: true